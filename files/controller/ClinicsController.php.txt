<?php

$root = $_SERVER['DOCUMENT_ROOT'];
require_once $root . '/../libs/Slim/Slim.php';
require_once $root . '/../sys/controller/RouteController.php';
require_once $root . '/../sys/controller/ModelController.php';

/**
 * Controller for the /Clinics route.
 */
class ClinicsController implements RouteController{
	
	/** Instance of model controller. */
	private $mc;

	/** Instance of Slim\Slim::app() */
	private $app;

	public function __construct() {
		$this->mc = new ModelController();
		$this->app = Slim\Slim::getInstance();
	}

	public function index(&$args) {
		echo json_encode($this->mc->getClinics());
	}

	public function create(&$args) {
		if (!isset($args['clinic'])) $this->app->halt(400);

		$clinic = json_decode($args['clinic'], true);

		// TODO: ensure that all needed parameters are set.
		// TODO: ensure the action is authorized.

		// Generate salt.
		$salt = time() . $clinic['name'];
		$password = hash('sha512', $salt . $clinic['password']);
		$clinic['password'] = $password;
		$clinic['salt'] = $salt;

                $clinic['expiration'] = null;
		$ret = $this->mc->createClinic($clinic);

		echo json_encode(array('id' => $ret));

	}
	public function show(&$args) {}
	public function update(&$args) {
		$clinic = json_decode($args['clinic'], true);

		// TODO: ensure that all needed parameters are set.
		// TODO: ensure that action is authorized.

		if ((isset($clinic['password'])) && 
				($clinic['password'] != "") 								&& 
				($clinic['password'] != null)) 							{

			$salt = time() . $clinic['name'];

			$password = hash('sha512', $salt . $clinic['password']);

			$clinic['password'] = $password;
			$clinic['salt'] = $salt;
		}

                $clinic['expiraton'] = null;
		echo json_encode($this->mc->updateClinic($clinic));

	}
	public function destroy(&$args) {}
}
?>

